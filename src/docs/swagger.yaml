openapi: 3.0.0
info:
  title: HomeFinder API
  version: 1.0.0
  description: API documentation for HomeFinder, a rental and landlord app and management system.

servers:
  - url: http://localhost:5000/api/v1
    description: Local development server
  - url: https://api.homefinder.com/v1
    description: Production server

paths:
  /auth/signup:
    post:
      summary: User registration
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fullName:
                  type: string
                  example: "Homefinder landlord"
                email:
                  type: string
                  format: email
                  example: "homefinderlandlord@gmail.com"
                phone:
                  type: string
                  example: "08055554343"
                password:
                  type: string
                  format: password
                  example: "password123"
                passwordRepeat:
                  type: string
                  format: password
                  example: "password123"
                role:
                  type: string
                  enum: [ "renter", "landlord" ]
                  example: "landlord"
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User registered successfully"
                  data:
                    $ref: '#/components/schemas/User'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example:
                      invalidRole:
                        value: "Invalid or missing role. Role must be renter or landlord"
                      passwordMismatch:
                        value: "Password and passwordRepeat do not match"
                      ExistingUser:
                        value: "Email already registered. Please login instead"

  /auth/login:
    post:
      summary: User login
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                emailOrPhone:
                  type: string
                  format: email
                  example: "admin@gmail.com"
                password:
                  type: string
                  format: password
                  example: "password123"
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Login successful"
                  token:
                    type: object
                    properties:
                      token:
                        type: string
                        example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
                      expiresIn:
                        type: string
                        example: "2025-06-01T13:32:52.016Z"
                  user:
                    $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid Credentials"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User Not Found"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Empty Login Data"

  /auth/forgot-password:
    post:
      summary: Forgot password
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                emailOrPhone:
                  type: string
                  format: email
                  example: "adminHome@gmail.com"
      responses:
        '200':
          description: Password reset link sent
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                    example: "true"
                  message:
                    type: string
                    example: "Password reset code sent to your email address."
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                    example: "false"
                  message:
                    type: string
                    example: "Validation Failed"
                  data:
                    type: object
                    properties:
                      errors:
                        type: array
                        items:
                          $ref: '#/components/schemas/ValidationError'

        '429':
          description: Too many Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                    example: "false"
                  message:
                    type: string
                    example: "Too many password reset attempts. Please try again later."

  /auth/reset-password:
    post:
      summary: Forgot password
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                emailOrPhone:
                  type: string
                  format: email
                  example: "adminHome@gmail.com"
      responses:
        '200':
          description: Password reset link sent
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                    example: "true"
                  message:
                    type: string
                    example: "Password reset successfully."
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                    example: "false"
                  message:
                    type: string
                    example: "Validation Failed"
                  data:
                    type: object
                    properties:
                      errors:
                        type: array
                        items:
                          $ref: '#/components/schemas/StrongPasswordError'

        '429':
          description: Too many Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                    example: "false"
                  message:
                    type: string
                    example: "Too many password reset attempts. Please try again later."

  /properties:
    get:
      summary: Get all properties
      tags:
        - Properties
      responses:
        '200':
          description: List of properties
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Property'

  /properties/{id}:
    get:
      summary: Get property by ID
      tags:
        - Properties
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: ID of the property
      responses:
        '200':
          description: A single property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Property'
        '404':
          description: Property not found

components:
  schemas:
    Property:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        price:
          type: number
        city:
          type: string
        state:
          type: string
        country:
          type: string
        isAvailable:
          type: boolean
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          example: "8518d7f6-2d75-43b1-aab0-72df31fd28aa"
        fullName:
          type: string
          example: "Homefinder Admin"
        email:
          type: string
          format: email
          example: "admin@gmail.com"
        phone:
          type: string
          example: "08055554343"
        password:
          type: string
          description: "Hashed password"
          example: "$2b$10$gSacFOvFlgl0ZaVfo/Xkvuti2kmklY/jPlC0iWQl4fj8tlv.lTBuG"
        isVerified:
          type: boolean
          example: false
        roleId:
          type: integer
          example: 1
        createdAt:
          type: string
          format: date-time
          example: "2025-06-01T13:32:52.016Z"
        updatedAt:
          type: string
          format: date-time
          example: "2025-06-01T13:32:52.016Z"
        role:
          $ref: '#/components/schemas/Role'

    Role:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "renter"

    ValidationError:
      type: object
      properties:
        type:
          type: string
          example: "field"
        msg:
          type: string
          example: "Please provide a valid email address"
        path:
          type: string
          example: "email"
        location:
          type: string
          example: "body"

    StrongPasswordError:
      type: object
      properties:
        type:
          type: string
          example: "field"
        value:
          type: string
          example: "password123"
        msg:
          type: string
          example: "Password must contain at least one lowercase letter, one uppercase letter, one number, and one special character"
        path:
          type: string
          example: "newPassword"
        location:
          type: string
          example: "body"
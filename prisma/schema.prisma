// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id    Int    @id @default(autoincrement())
  name  String @unique
  users User[]
}

model User {
  id         String   @id @default(uuid())
  fullName   String
  email      String   @unique
  phone      String   @unique
  password   String
  isVerified Boolean  @default(false)
  roleId     Int
  role       Role     @relation(fields: [roleId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  // Password reset tokens
  passwordResetTokens PasswordResetToken[]
}

model PasswordResetToken {
  id        String   @id @default(cuid())
  token     String   @unique
  userId    String
  expiresAt DateTime
  used      Boolean  @default(false)
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Document {
  id         String             @id @default(uuid())
  userId     String
  fileName   String
  fileUrl    String
  status     VerificationStatus @default(PENDING)
  uploadedAt DateTime           @default(now())
}

enum VerificationStatus {
  PENDING
  APPROVED
  REJECTED
}

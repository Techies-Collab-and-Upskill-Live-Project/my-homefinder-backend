// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id    Int     @id @default(autoincrement())
  name  String  @unique
  users User[]
}

model User {
  id         String   @id @default(uuid())
  fullName   String
  email      String   @unique
  phone      String   @unique
  password   String
  isVerified Boolean  @default(false)
  roleId     Int
  role       Role     @relation(fields: [roleId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  tenants TenantProfile[]
  landlords LandLordProfile[]
}

model TenantProfile {
  id  Int @id @default(autoincrement())
  profileImage String
  fullName String
  phoneNumber String @unique
  street String
  city String
  state String
  NIN String @unique
  userId String
  user User @relation(fields: [userId], references: [id])
}

model LandLordProfile {
  id Int @id @default(autoincrement())
  profileImage String
  typeOfHouse String
  numberOfRooms String
  otherInfo String
  street String
  preference Preference @default(calls)
  userId String
  user User @relation(fields: [userId], references: [id]) 
}

enum Preference {
  calls
  chat
  both
}